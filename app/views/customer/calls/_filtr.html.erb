<%
form_item.init do |f|
#  f.caption = "Filtr fields"	
  f.set_fields do |filtr_name|
    s = session[:filtr][filtr_name]
	input_html = {:filtr_name => form_item.filtr_name, :class => "updatable form-control ", :action_name => customer_calls_path(hash_with_region_and_privacy)}
   	label_html = {:class => "control-label "}
    action_name = customer_calls_path(hash_with_region_and_privacy)
    user_choice_id = user_type == :admin ?  (s["user_id"] || current_user_id) : current_or_guest_user_id
    user_choice_id = nil if user_choice_id.blank?
    query = Customer::Call.joins(:call_run).where(:customer_call_runs => {:user_id => current_or_guest_user_id}).query_hash_from_filtr_with_all_keys_excluded(session[:filtr][filtr_name])
    user_calls_query = Customer::Call.joins(:call_run).where(:customer_call_runs => {:user_id => user_choice_id})
  (user_type == :admin ? [
  	[
	label(filtr_name, "user_id", "Выбор пользователя", label_html),	
	collection_select(filtr_name, "user_id", User.joins(:customer_call_runs).select([:id, :name]).where.not(:customer_call_runs => {:operator_id => nil}).uniq, :id, :name, 
	  	   {:include_blank => "выберите пользователя", :selected => (s["user_id"] || current_user_id) }, input_html ),
  	],
  ] : []) +	
  [
  	[
	label(filtr_name, "call_run_id", "Выбор описания моделирования", label_html),	
	collection_select(filtr_name, "call_run_id", Customer::CallRun.where(:id => user_calls_query.query_from_filtr(s, "call_run_id").pluck(:call_run_id).uniq ), :id, :name, 
	  	   {:include_blank => "выберите описания моделирования", :selected => s["call_run_id"] }, input_html ),

  	 label(filtr_name, "customer_calls.description[accounting_period]", "Календарный период", label_html),
  	 select(filtr_name, "customer_calls.description[accounting_period]", 
	  	 user_calls_query.query_from_filtr(s, "customer_calls.description[accounting_period]").collect { |q| q.description['accounting_period'] }.uniq,
#  		 accounting_periods(s["call_run_id"]), 
  	 	 {:include_blank => "выберите календарный период", :selected => (s["customer_calls.description"]["accounting_period"] if s["customer_calls.description"] )}, input_html ),

  	 label(filtr_name, "base_service_id", "Услуга", label_html),
  	 collection_select(filtr_name, "base_service_id", Category.where(:id => user_calls_query.query_from_filtr(s, "base_service_id").pluck(:base_service_id).uniq ), :id, :name, 
  	   {:include_blank => "Услуга", :selected => s["base_service_id"] }, input_html ),

  	 label(filtr_name, "base_subservice_id", "Направление", label_html), 
  	 collection_select(filtr_name, "base_subservice_id", Category.where(:id => user_calls_query.query_from_filtr(s, "base_subservice_id").pluck(:base_subservice_id).uniq ), :id, :name, 
  	   {:include_blank => "Направление услуги", :selected => s["base_subservice_id"] }, input_html ),
  	],
#  	["", collection_select(filtr_name, "user_id", User.where(:id => user_calls_query.query_from_filtr(s, "user_id").pluck(:user_id).uniq ), :id, :name, 
#  	   {:include_blank => "Пользователь", :selected => s["user_id"] }, input_html )
#  	],
#  	["", select(filtr_name, "own_phone[number]", user_calls_query.query_from_filtr(s, "own_phone[number]").collect { |q| q.own_phone['number'] }.uniq , 
#  	   {:include_blank => "Телефон пользователя", :selected => (s["own_phone"]["number"] if s["own_phone"] )}, input_html )
#  	],
#  	["", collection_select(filtr_name, "own_phone[operator_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "own_phone[operator_id]").collect { |q| q.own_phone['operator_id'] }.uniq ) , :id, :name, 
#  	   {:include_blank => "Оператор пользователя", :selected => (s["own_phone"]["operator_id"] if s["own_phone"] )}, input_html )
#  	],
#  	["", collection_select(filtr_name, "own_phone[region_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "own_phone[region_id]").collect { |q| q.own_phone['region_id'] }.uniq ) , :id, :name, 
#  	   {:include_blank => "Регион пользователя", :selected => (s["own_phone"]["region_id"] if s["own_phone"] )}, input_html )
#  	],
#  	["", collection_select(filtr_name, "own_phone[country_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "own_phone[country_id]").collect { |q| q.own_phone['country_id'] }.uniq ) , :id, :name, 
#  	   {:include_blank => "Страна пользователя", :selected => (s["own_phone"]["country_id"] if s["own_phone"] )}, input_html )
#  	],
  	[
  	 label(filtr_name, "partner_phone[number]", "Куда или откуда звоните", label_html), 
  	 '',
#  	 select(filtr_name, "partner_phone[number]", user_calls_query.query_from_filtr(s, "partner_phone[number]").collect { |q| q.partner_phone['number'] }.uniq , 
#  	   {:include_blank => "Телефон 2-й стороны", :selected => (s["partner_phone"]["number"] if s["partner_phone"] )}, input_html )

  	 label(filtr_name, "partner_phone[operator_id]", "Оператор", label_html), 
  	 collection_select(filtr_name, "partner_phone[operator_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "partner_phone[operator_id]").collect { |q| q.partner_phone['operator_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Оператор 2-й стороны", :selected => (s["partner_phone"]["operator_id"] if s["partner_phone"] )}, input_html ),

#  	["Тип оператора 2-й стороны", collection_select(filtr_name, "partner_phone[operator_type_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "partner_phone[operator_type_id]").collect { |q| q.partner_phone['operator_type_id'] }.uniq ) , :id, :name, 
#  	   {:include_blank => "Тип оператора 2-й стороны", :selected => (s["partner_phone"]["operator_type_id"] if s["partner_phone"] )}, input_html )
#  	],
  	 label(filtr_name, "partner_phone[region_id]", "Регион", label_html), 
  	 collection_select(filtr_name, "partner_phone[region_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "partner_phone[region_id]").collect { |q| q.partner_phone['region_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Регион 2-й стороны", :selected => (s["partner_phone"]["region_id"] if s["partner_phone"] )}, input_html ),

  	 label(filtr_name, "partner_phone[country_id]", "Страна", label_html), 
  	 collection_select(filtr_name, "partner_phone[country_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "partner_phone[country_id]").collect { |q| q.partner_phone['country_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Страна 2-й стороны", :selected => (s["partner_phone"]["country_id"] if s["partner_phone"] )}, input_html ),
  	],
  	  
  	[
  	 ' ', 
  	 label(filtr_name, "", "Роуминг (где находитесь)", label_html), 

  	 label(filtr_name, "connect[operator_id]", "Оператор", label_html), 
  	 collection_select(filtr_name, "connect[operator_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "connect[operator_id]").collect { |q| q.connect['operator_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Оператор подключения", :selected => (s["connect"]["operator_id"] if s["connect"] )}, input_html ),

  	 label(filtr_name, "connect[region_id]", "Регион", label_html), 
  	 collection_select(filtr_name, "connect[region_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "connect[region_id]").collect { |q| q.connect['region_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Регион подключения", :selected => (s["connect"]["region_id"] if s["connect"] )}, input_html ),

  	 label(filtr_name, "connect[country_id]", "Страна", label_html), 
  	 collection_select(filtr_name, "connect[country_id]", Category.where(:id => user_calls_query.query_from_filtr(s, "connect[country_id]").collect { |q| q.connect['country_id'] }.uniq ) , :id, :name, 
  	   {:include_blank => "Страна подключения", :selected => (s["connect"]["country_id"] if s["connect"] )}, input_html ),
  	],   
  ] 
  end
end
%>
