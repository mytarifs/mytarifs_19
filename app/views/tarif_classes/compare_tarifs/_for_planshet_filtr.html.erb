<%
form_item.init do |fi|
input_html = {:filtr_name => form_item.filtr_name, :class => "updatable form-control ", 
	:action_name => compare_tarifs_for_planshet_path(hash_with_region_and_privacy({:name => 'dlya_plansheta'}))}
label_html = {:class => "control-label "}
  s = session_filtr_params(fi)	
#  fi.caption = "Выбор тарифов"	
  
  basic_tarifs = TarifClass.tarifs.where(:privacy_id => m_privacy_id).
  	service_is_published.where(service_is_recommended_for_planshet).order(:operator_id)
  basic_tarifs = basic_tarifs.region_txt(m_region).original_tarif_class.extend_with_regions(m_region)

  fi.set_fields do |filtr_name|

  	operator_tarif_inputs = []
  	3.times.each do |index|
  		operator_tarif_inputs += [
	      	label(filtr_name, "operators[#{index}]", "Выберите оператора №#{index}", label_html) +
	      	collection_select(filtr_name, "operators[#{index}]", Category::Operator.operators_with_tarifs, :id, :name, 
		  	{:include_blank => "выберите оператора", :selected => s["operators"].try(:[], index.to_s).try(:to_i) }, input_html.merge({:size => 5}) ) +
		  	label(filtr_name, "tarifs[#{index}]", "Выберите тариф №#{index}", label_html),
	      	collection_select(filtr_name, "tarifs[#{index}]", basic_tarifs.where(:operator_id => s["operators"].try(:[], index.to_s).try(:to_i)), :id, :name, 
		  	{:include_blank => "выберите тариф", :selected => s["tarifs"].try(:[], index.to_s).try(:to_i) }, input_html ),
  		]
  	end
    [
	 operator_tarif_inputs
    ] 
  end
end
%>
