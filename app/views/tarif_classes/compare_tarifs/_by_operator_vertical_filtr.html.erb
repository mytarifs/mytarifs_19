<%
form_item.init do |fi|
	
	fi.action_on_submit = compare_tarifs_by_operator_path(hash_with_region_and_privacy({:operator_id => operator.slug}))
	input_html = {:filtr_name => form_item.filtr_name, :class => " form-control "}
	operator_input_html = input_html.merge({:class => "updatable hidden"})

	button_on_class = "btn-warning"
	button_off_class = "btn-default"
	label_html = {:class => ""}
	button_group_class = "btn-group btn-group-justified btn-group-sm"
	button_base_class = "btn btn_text_always_on_screen "

    s = session_filtr_params(fi)
    basic_tarifs = TarifClass.tarifs.where(:privacy_id => m_privacy_id).
  	  service_is_published.where("tarif_classes.features is not null").where.not(:id =>  [803, 804]).order(:operator_id)
    basic_tarifs = basic_tarifs.region_txt(m_region).original_tarif_class.extend_with_regions(m_region)
    basic_tarifs = basic_tarifs.where(:id => TarifClass.unlimited_tarif_ids) if (s["unlimited_only_tarifs"] || "true") == 'true'

    tarif_name_to_use_in_select = m_region.blank? ? :name_with_region : :name
  

  fi.set_fields do |filtr_name|

	result = []

  	3.times.each do |index|
  		result << [
		  	label(filtr_name, "tarifs[#{index}]", " Тариф  №#{index}", label_html),
	      	collection_select(filtr_name, "tarifs[#{index}]", basic_tarifs.where(:operator_id => operator.try(:id)), :id, tarif_name_to_use_in_select, 
			  	{:include_blank => "выберите тариф", :selected => s["tarifs"].try(:[], index.to_s).try(:to_i) }, input_html ),
  		]
  	end

	result << [
		"",
		submit_tag("Подобрать тарифы", class: "btn btn_text_always_on_screen btn-success")
	]

  end
end
%>
