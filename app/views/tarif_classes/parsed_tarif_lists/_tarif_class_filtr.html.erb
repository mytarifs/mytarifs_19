<%
form_item.init do |fi|
  s = session[:filtr]['parsed_tarif_lists_tarif_class_filtr'] || {}	
  input_html = {:filtr_name => form_item.filtr_name, :class => "updatable form-control ", :action_name => parsed_tarif_lists_path(hash_with_region_and_privacy)}
  label_html = {:class => "control-label "}
#  fi.caption = "Фильтр"	
  dependency_parts = [
  	["Звонки (внутри России)", "own-country-rouming/calls"], ["СМС (внутри России)", "own-country-rouming/sms"],
  	["ММС (внутри России)", "own-country-rouming/mms"], ["Интернет (внутри России)", "own-country-rouming/mobile-connection"],
  	["Звонки (за границей)", "all-world-rouming/calls"], ["СМС (за границей)", "all-world-rouming/sms"],
  	["ММС (за границей)", "all-world-rouming/mms"], ["Интернет (за границей)", "all-world-rouming/mobile-connection"],
  	]
  fi.set_fields do |filtr_name|
    [
      [
      	label(filtr_name, "operator_id", "Оператор", label_html),
      	collection_select(filtr_name, "operator_id", Category::Operator.operators_with_tarifs, :id, :name, 
	  	{:include_blank => "выберите оператора", :selected => s["operator_id"] }, input_html.merge({:size => 5}) ) +

      	label(filtr_name, "hide_secondary_tarif_class", "hide_secondary_tarif_class", label_html) +
      	select(filtr_name, "hide_secondary_tarif_class", [['Да', 'true'], ], 
	  	{:include_blank => "выберите статус", :selected => (s["hide_secondary_tarif_class"])}, input_html.merge({:size => 2}) ),

      	label(filtr_name, "standard_service_id", "Тип услуги", label_html),
      	collection_select(filtr_name, "standard_service_id", Category.where(:id => TarifClass::ServiceType.slice(:tarif, :common_service, :special_service).values), :id, :name, 
	  	{:include_blank => "выберите тариф или опцию", :selected => s["standard_service_id"] }, input_html.merge({:size => 4}) ) +

      	label(filtr_name, "privacy_id", "Для физических или юридических лиц", label_html) +
      	collection_select(filtr_name, "privacy_id", Category.privacy, :id, :name, 
	  	{:include_blank => "privacy", :selected => s["privacy_id"] }, input_html.merge({:size => 3})),

      	label(filtr_name, "dependency_parts", "Категория услуги", label_html),
      	select(filtr_name, "dependency_parts", dependency_parts, 
	  	{:include_blank => "выберите категорию", :selected => (s["dependency_parts"])}, input_html.merge({:multiple => false, :size => dependency_parts.size + 1}) ),

	   	label(filtr_name, "tarif_class_id", 'tarif_class_id', label_html),
      	collection_select(filtr_name, "tarif_class_id", tarif_classes_for_parsed_tarif_lists, :id, :name, 
	  	{:include_blank => "выберите tarif_class", :selected => s["tarif_class_id"] }, input_html.merge({:multiple => false, :size => [10, tarif_classes_for_parsed_tarif_lists.size + 1].min}) ),

	  ]
    ] 
  end
end
%>
