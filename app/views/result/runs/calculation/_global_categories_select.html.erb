<%
form_item.init do |f|
#  f.caption = "Выбор услуг оператора"	
  f.set_fields do |filtr_name|
	input_html = {:filtr_name => form_item.filtr_name, :class => "updatable form-control ", 
		:action_name => result_detailed_calculations_optimization_options_path(hash_with_region_and_privacy({:id => params[:id]}))}
	label_html = {:class => "control-label "}
    s = session_filtr_params(f)

#  	 label(filtr_name, "", "Выбор роуминга", label_html), "", 
#     "", check_box(filtr_name, "own_and_home_regions_rouming[is_chosen]", (s["own_and_home_regions_rouming"]['is_chosen'] == 'true' ? {:checked => 'checked'} : {} ).merge(input_html), true, false ),
	result = []
#	s={}
	s = Optimization::Global::Base::Structure if s.blank?
	raise(StandardError, [
		s, params
	]) if false
	s.each do |first_key, first_value|
		if !first_value.blank? and first_value.is_a?(Hash)
			first_value.each do |second_key, second_value|
				if !second_value.blank? and second_value.is_a?(Hash)
					second_value.each do |third_key, third_value|
						if !third_value.blank? and third_value.is_a?(Hash)
							third_value.each do |fourth_key, fourth_value|
								result << [
									label(filtr_name, "", first_key, label_html), "",
									label(filtr_name, "", second_key, label_html), "",
									label(filtr_name, "", third_key, label_html), "",
									label(filtr_name, "", fourth_key, label_html), "",
									"", check_box(filtr_name, "#{first_key}[#{second_key}][#{third_key}][#{fourth_key}]", (s[first_key][second_key][third_key][fourth_key] == 'true' ? {:checked => 'checked'} : {} ).merge(input_html), "true", "false" )
								]
							end
						else
							result << [
								label(filtr_name, "", first_key, label_html), "",
								label(filtr_name, "", second_key, label_html), "",
								label(filtr_name, "", third_key, label_html), "",
								"", "",
								"", check_box(filtr_name, "#{first_key}[#{second_key}][#{third_key}]", (s[first_key][second_key][third_key] == 'true' ? {:checked => 'checked'} : {} ).merge(input_html), "true", "false" )
							]
						end
					end 
				else
					result << [
						label(filtr_name, "", first_key, label_html), "",
						label(filtr_name, "", second_key, label_html), "",
						"", "",
						"", "",
						"", check_box(filtr_name, "#{first_key}[#{second_key}]", (s[first_key][second_key] == 'true' ? {:checked => 'checked'} : {} ).merge(input_html), "true", "false" ),
					]
				end
			end 
		else	
			result << [
				label(filtr_name, "", first_key, label_html),  "",
				"", "",
				"", "",
				"", "",
				"", check_box(filtr_name, "#{first_key}", (s[first_key] == 'true' ? {:checked => 'checked'} : {} ).merge(input_html), "true", "false" ),
			]
		end
	end
	raise(StandardError, result) if false
	result
  end
end
%>
