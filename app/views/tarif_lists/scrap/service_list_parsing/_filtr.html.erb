<%
form_item.init do |fi|
  input_html = {:filtr_name => form_item.filtr_name, :class => "updatable form-control ", :action_name => scrap_tarif_lists_path(hash_with_region_and_privacy)}
  label_html = {:class => "control-label "}
  s = session_filtr_params(fi)	
  tarif_list_filtr = session[:filtr]['tarif_list_region_filtr'] || {}

  selected_tarif_class = TarifClass.where(:id => tarif_list_filtr['tarif_class_id'].try(:to_i)).first
  current_search_services_tag = selected_tarif_class.try(:search_services_tag) || {'1' => []}
  s['search_services_tag'] ||= {}
  s['search_services_tag']['key'] ||= current_search_services_tag.keys[0]
  current_search_services_tag_values = current_search_services_tag[s['search_services_tag']['key']] || []
  
  show_additional_fields_in_service_list = ['service_name', 'services_to_scrap_base_tarif_classes', 'all_exisitng_services_value']

  fi.set_fields do |filtr_name|
    [
	   [
     	label(filtr_name, "scrap_status", "scrap_status", label_html),
     	select(filtr_name, "scrap_status", Scraper::SearchServices.search_unscrapped_services_status.map{|k, v| [v, k]}, 
	  	  {:include_blank => true, :selected => s["scrap_status"]}, input_html.merge({:multiple => true, :size => Scraper::SearchServices.search_unscrapped_services_status.keys.size + 1})),

     	label(filtr_name, "to_scrap_status", "to_scrap_status", label_html),
     	select(filtr_name, "to_scrap_status", Scraper::SearchServices.to_scrap_services_status.map{|k, v| [v, k]}, 
	  	  {:include_blank => true, :selected => s["to_scrap_status"]}, input_html.merge({:multiple => true, :size => Scraper::SearchServices.to_scrap_services_status.keys.size + 1})) +

      	label(filtr_name, "unequal_links", "show unequal_links", label_html) +
      	select(filtr_name, "unequal_links", [['Да', 'true']], 
	  	{:include_blank => "выберите статус", :selected => (s["unequal_links"])}, input_html.merge({:size => 2}) ),

     	label(filtr_name, "scrap_management_buttons", "scrap_management_buttons", label_html),
     	select(filtr_name, "scrap_management_buttons", Scraper::SearchServices.unscrapped_service_management_buttons.keys, 
	  	  {:include_blank => true, :selected => s["scrap_management_buttons"]}, 
	  	  input_html.merge({:multiple => true, :size => Scraper::SearchServices.unscrapped_service_management_buttons.keys.size + 1})),

     	label(filtr_name, "show_additional_fields_in_service_list", "show_additional_fields_in_service_list", label_html),
     	select(filtr_name, "show_additional_fields_in_service_list", show_additional_fields_in_service_list, 
	  	  {:include_blank => true, :selected => s["show_additional_fields_in_service_list"]}, 
	  	  input_html.merge({:multiple => true, :size => show_additional_fields_in_service_list.size + 1})),

     ],
     [
     	label(filtr_name, "search_services_tag[new_value]", "search_services_tag[new_value]", label_html),
     	text_area(filtr_name, "search_services_tag[new_value]", input_html.merge({:class => "form-control", :value => s["search_services_tag"].try(:[], 'new_value')})) +     	

      	label(filtr_name, "search_services_tag[current_value]", "search_services_tag[current_value]", label_html) +
     	text_area(filtr_name, "search_services_tag[current_value]", input_html.merge({:class => "form-control", :value => current_search_services_tag, :rows => 3})) +     	
     	select(filtr_name, "search_services_tag[key]", current_search_services_tag.keys, 
	  	  {:include_blank => false, :selected => s["search_services_tag"].try(:[], 'key')}, input_html.merge({:multiple => false, :size => current_search_services_tag.keys.size})) +
     	select(filtr_name, "search_services_tag[value]", current_search_services_tag_values, 
	  	  {:include_blank => false, :selected => s["search_services_tag"].try(:[], 'value')}, input_html.merge({:multiple => false, :size => current_search_services_tag_values.size})) +

	   	content_tag(:div, class: "btn-group btn-group-justified btn-group-sm") do
		   	label(filtr_name, "search_services_tag_add_key", "add key", {:class => "btn btn-success", :type => "button"}) +
		   	check_box_tag("service_list_parsing_filtr[search_services_tag][add_key]", "true", nil, input_html.merge({:class => "updatable hidden" })) +

		   	label(filtr_name, "search_services_tag_take_out_key", "take out key", {:class => "btn btn-success", :type => "button"}) +
		   	check_box_tag("service_list_parsing_filtr[search_services_tag][take_out_key]", "true", nil, input_html.merge({:class => "updatable hidden" }))

	   	end +
	   	content_tag(:div, class: "btn-group btn-group-justified btn-group-sm") do
		   	label(filtr_name, "search_services_tag_check", "check", {:class => "btn btn-success ", :type => "button"}) +
		   	check_box_tag("service_list_parsing_filtr[search_services_tag][check]", "true", nil, input_html.merge({:class => "updatable hidden" })) +
	
		   	label(filtr_name, "search_services_tag_add_value", "add value", {:class => "btn btn-success", :type => "button"}) +
		   	check_box_tag("service_list_parsing_filtr[search_services_tag][add_value]", "true", nil, input_html.merge({:class => "updatable hidden" })) +

		   	label(filtr_name, "search_services_tag_take_out_value", "take out value", {:class => "btn btn-success", :type => "button"}) +
		   	check_box_tag("service_list_parsing_filtr[search_services_tag][take_out_value]", "true", nil, input_html.merge({:class => "updatable hidden" }))
	   	end

	   ],
    ].compact
  end
end
%>
